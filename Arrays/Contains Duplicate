class Solution {
    public boolean containsDuplicate(int[] nums) {
        HashSet<Integer> set = new HashSet<>();
        for (int num : nums) {
            if (set.contains(num)) {
                return true;
            }
            set.add(num);
        }
        return false;
    }
}

Time Complexity (O(n)): 
The algorithm iterates through the array once, and each operation (checking for existence and adding an element in the HashSet) takes constant time on average, leading to a linear time complexity of O(n).

Space Complexity (O(n)): 
The solution uses a HashSet to store elements, and in the worst case, it stores all n elements from the array, resulting in a space complexity of O(n).